/**
 * This module was automatically generated by `ts-interface-builder`
 */
import * as t from "ts-interface-checker";
// tslint:disable:object-literal-key-quotes

export const GeneratorConfigMapLayer = t.iface([], {
  "name": "string",
  "dimensions": t.opt(t.iface([], {
    "width": "number",
    "height": "number",
  })),
  "position": t.opt(t.iface([], {
    "x": "number",
    "y": "number",
  })),
  "mapUnitDimensions": t.iface([], {
    "width": "number",
    "height": "number",
  }),
  "focus": t.opt(t.iface([], {
    "point": t.union(t.lit('system'), t.iface([], {
      "x": "number",
      "y": "number",
    })),
    "delta": t.opt(t.iface([], {
      "x": "number",
      "y": "number",
    })),
  })),
  "elements": t.iface([], {
    "systems": t.opt("boolean"),
    "systemLabels": t.opt("boolean"),
    "factions": t.opt(t.iface([], {
      "curveBorderEdges": t.opt("boolean"),
    })),
    "borderLabels": t.opt("boolean"),
    "connectionLines": t.opt(t.iface([], {
      "minimumDistance": t.opt("number"),
      "maximumDistance": t.opt("number"),
    })),
    "jumpRings": t.opt(t.iface([], {
      "radii": t.array("number"),
      "delta": t.opt(t.iface([], {
        "x": "number",
        "y": "number",
      })),
      "strokeWidths": t.opt(t.union("number", t.array("number"))),
      "strokeColors": t.opt(t.union("string", t.array("string"))),
      "fillColors": t.opt(t.union("string", t.array("string"))),
    })),
    "directionalIndicators": t.opt(t.array("GeneratorConfigMapLayerDirectionalIndicator")),
  }),
});

export const GeneratorConfigMapLayerDirectionalIndicator = t.iface([], {
  "coordinates": t.iface([], {
    "x": "number",
    "y": "number",
  }),
  "text": "string",
  "textSizeFactor": t.opt("number"),
  "strokeWidth": t.opt("number"),
  "strokeColor": t.opt("string"),
  "fillColor": t.opt("string"),
  "minimumIndicatorDistance": t.opt("number"),
  "minimumMeasurementDistance": t.opt("number"),
  "mapUnitName": t.opt("string"),
});

const exportedTypeSuite: t.ITypeSuite = {
  GeneratorConfigMapLayer,
  GeneratorConfigMapLayerDirectionalIndicator,
};
export default exportedTypeSuite;
