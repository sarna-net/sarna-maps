/**
 * This module was automatically generated by `ts-interface-builder`
 */
import * as t from "ts-interface-checker";
// tslint:disable:object-literal-key-quotes

export const GeneratorConfigOverlayItemBase = t.iface([], {
  "name": "string",
  "position": t.iface([], {
    "x": "number",
    "y": "number",
  }),
});

export const GeneratorConfigOverlayItemText = t.iface(["GeneratorConfigOverlayItemBase"], {
  "type": t.lit('text'),
  "attributes": t.iface([], {
    "text": "string",
  }),
});

export const GeneratorConfigOverlayItemSvgElement = t.iface(["GeneratorConfigOverlayItemBase"], {
  "type": t.lit('svgElement'),
  "attributes": t.iface([], {
    "svgTemplate": "string",
    "cssTemplate": t.opt("string"),
    "scale": t.opt("number"),
  }),
});

export const GeneratorConfigOverlayItemRectangle = t.iface(["GeneratorConfigOverlayItemBase"], {
  "type": t.lit('rectangle'),
  "attributes": t.iface([], {
    "width": "number",
    "height": "number",
    "strokeWidth": t.opt("number"),
    "strokeColor": t.opt("string"),
    "fillColor": t.opt("string"),
  }),
});

export const GeneratorConfigOverlayItemScale = t.iface(["GeneratorConfigOverlayItemBase"], {
  "type": t.lit('scale'),
  "attributes": t.iface([], {
    "pixelsPerMapUnit": "number",
    "step": "number",
    "max": "number",
    "labelsPosition": t.opt(t.union(t.lit('above'), t.lit('below'))),
    "scaleHeight": t.opt("number"),
    "mapUnitName": t.opt("string"),
  }),
});

export const GeneratorConfigOverlay = t.union("GeneratorConfigOverlayItemRectangle", "GeneratorConfigOverlayItemText", "GeneratorConfigOverlayItemSvgElement", "GeneratorConfigOverlayItemScale");

const exportedTypeSuite: t.ITypeSuite = {
  GeneratorConfigOverlayItemBase,
  GeneratorConfigOverlayItemText,
  GeneratorConfigOverlayItemSvgElement,
  GeneratorConfigOverlayItemRectangle,
  GeneratorConfigOverlayItemScale,
  GeneratorConfigOverlay,
};
export default exportedTypeSuite;
